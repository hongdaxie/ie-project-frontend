{"version":3,"sources":["views/Account/index.js"],"names":["Content","Account","addNewHandle","props","history","push","pathname","id","toEdit","state","userid","showDeleteModal","item","setState","isShowDeleteModal","deleteItemName","name","selectedItemId","deleteItem","deleteItemConfirmLoading","deleteGrandparentById","then","resp","data","loadData","success","error","finally","sendNotification","console","log","loadingData","sendNotificationById","Object","keys","hideDeleteModal","getAllGrandparentsById","dataSource","isSendingNotification","this","year","Date","getFullYear","toString","isLogin","style","padding","minHeight","lg","span","offset","md","loading","locale","emptyText","grid","gutter","renderItem","i","Item","actions","type","key","theme","color","onClick","bind","textAlign","fontSize","fontWeight","email","relationship","phoneNumber","nextVaccineDate","substring","title","level","visible","onCancel","maskClosable","confirmLoading","onOk","hoverable","cover","to","Component","connect","user","nickname","withRouter"],"mappings":"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","file":"static/js/17.a3139bc1.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect, withRouter } from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport { Tag, Col, Card, Icon, Layout, List, Modal, Typography, message, Button } from 'antd'\nimport { getAllGrandparentsById , deleteGrandparentById, sendNotificationById} from '../../requests'\n\nconst {Content } = Layout;\n\n// const customizeRenderEmpty = () => (\n//     <div style={{ textAlign: 'center' }}>\n//     <Icon type=\"smile\" style={{ fontSize: 20 }} />\n//     <div>No Grandparent infomration</div>\n//     <div>You can click add new card to add</div>\n//     </div>\n// )\n\nclass Account extends Component {\n    constructor(){\n        super() \n        this.state = {\n            dataSource: [],\n            loadingData: false,\n            isShowDeleteModal : false,\n            deleteItemName: '',\n            deleteItemConfirmLoading: false,\n            selectedItemId: null,\n            isSendingNotification: false,\n        }\n    }\n\n\n    addNewHandle = ()=>{\n        // console.log(\"111\")\n        // console.log(this.props.id)\n        this.props.history.push({\n            pathname: `/account/addNew/${this.props.id}`,\n        })\n    }\n\n    toEdit = (id) => {\n        // console.log(id)\n        this.props.history.push({\n            pathname: `/account/edit/${id}`,\n            state:{\n                userid: this.props.id\n            }\n        })\n    }\n\n    showDeleteModal = (item) => {\n        // console.log(item)\n        this.setState({\n            isShowDeleteModal: true,\n            deleteItemName: item.name,\n            selectedItemId: item.id\n        })\n    }\n\n    deleteItem =() => {\n        // console.log(this.state.selectedItemId)\n        this.setState({\n            deleteItemConfirmLoading: true\n        })\n        deleteGrandparentById(this.state.selectedItemId)\n            .then(resp => {\n                if(resp.data){\n                    this.setState({\n                    }, ()=>{\n                        this.loadData(this.props.id)\n                    })\n                    message.success(`You have deleted ${this.state.deleteItemName} successfully!`)\n                }else{\n                    message.error(\"Failed to delete!\")\n                }\n            })\n            .finally(()=>{\n                this.setState({\n                    deleteItemConfirmLoading: false,\n                    deleteItemName: \"\",\n                    selectedItemId: null,\n                    isShowDeleteModal: false\n                })\n            })\n    }\n\n    sendNotification = (id) => {\n        console.log(id)\n        this.setState({\n            loadingData: true\n        })\n        sendNotificationById(id)\n            .then(resp => {\n                console.log(resp.data)\n                if(Object.keys(resp.data)[0] === \"success\"){\n                    message.success(resp.data.success)\n                }else{\n                    message.error(resp.data.error)\n                }\n            })\n            .finally(()=>{\n                this.setState({\n                    loadingData: false\n                })\n            })\n    }\n\n    hideDeleteModal = () =>{\n        this.setState({\n            isShowDeleteModal:false,\n            deleteItemConfirmLoading: false\n        })\n    }\n\n    loadData = (id) => {\n        this.setState({\n            loadingData: true\n        })\n        getAllGrandparentsById(id)\n            .then(resp=>{\n                // console.log(resp.data)\n                this.setState({\n                    dataSource: resp.data\n                })\n            })\n            .finally(() => {\n                this.setState({\n                    loadingData: false\n                })\n            })\n    }\n    componentDidMount(){\n        this.loadData(this.props.id)\n    }\n\n\n    render() {\n        // console.log(\"11\")\n        // console.log(this.state)\n        const currentYear = new Date().getFullYear()\n        const year = currentYear.toString()\n        return (\n            !this.props.isLogin\n            ?\n            <Redirect to=\"./login\"/>\n            :\n            <Layout>\n                {/* <Sider style={{margin: \"24px\", background: '#fff'}}>\n                \n                    <div style={{textAlign:\"center\", fontWeight:\"bold\", fontSize:\"18px\"}}>{`Hi, ${this.props.nickname}!`}</div>\n\n                </Sider> */}\n                <Content style={{ padding: '24px', minHeight: 280 }}>\n                <Col lg={{span:16, offset:4}} md = {{span: 22, offset:1}}>               \n                {/* <ConfigProvider renderEmpty={customizeRenderEmpty}> */}\n                <List\n                    loading= {this.state.loadingData}\n                    locale = {{emptyText:<div>You can click add new to add your grandparent infomration</div>}}\n                    grid={{\n                        gutter: 16,\n                        md: 1,\n                        lg: 2\n                    }}\n                    dataSource = {this.state.dataSource}\n                    renderItem = {\n                        (item,i) => (\n                            <List.Item>\n                                {/* <Row lg={{span:12, offset:5}} md = {{span: 22, offset:1}}> */}\n                                <Card\n                                actions={[\n                                    <Icon type=\"edit\" key=\"edit\" theme=\"filled\" style={{color:\"#1890ff\"}} onClick={this.toEdit.bind(this, item.id)} />,\n                                    <Icon type=\"delete\" key=\"delete\" theme=\"filled\" style={{color:\"#FF0000\"}} onClick={this.showDeleteModal.bind(this, item)} />,\n                                ]}\n                                >\n                                <div style={{textAlign:\"center\"}}>\n                                    <div style={{fontSize: \"24px\", fontWeight: \"bold\"}}>{item.name}</div>\n                                    <div>email : {item.email}</div>\n                                    <div>relationship: {item.relationship}</div>\n                                    {/* <div>Recerive notification: <Tag color={item.receiveNotification? \"#87d068\" : \"#f50\"}>{item.receiveNotification? \"Yes\": \"No\"}</Tag></div> */}\n                                    <div>Phone: {item.phoneNumber}</div>\n                                    <div>Next Vaccine date: <Tag color={item.nextVaccineDate.substring(0,4)=== year ? \"#f50\" : \"#87d068\"}>{item.nextVaccineDate}</Tag></div>\n                                    <br />\n                                    <Button type=\"primary\" onClick = {this.sendNotification.bind(this, item.id)} >Send notification</Button>\n                                </div>\n                                    \n                                </Card>\n                                {/* </Row> */}\n                            </List.Item> \n                        )\n                        }\n                >\n                </List>\n                {/* </ConfigProvider> */}\n                <Modal\n                  title= {<Typography level={1}>This action is unreoverable!!!</Typography>}\n                  visible = {this.state.isShowDeleteModal}\n                  onCancel= {this.hideDeleteModal}\n                  maskClosable = {false}\n                  confirmLoading = {this.state.deleteItemConfirmLoading}\n                  onOk = {this.deleteItem}\n                >\n                    <Typography>Are you sure to delete <span style={{color:\"#f00\"}}>{this.state.deleteItemName}</span>?</Typography>\n                </Modal>\n                <Card\n                    hoverable\n                    cover={<Icon type=\"user-add\" style={{fontSize:\"64px\"}}></Icon>}\n                    onClick= {this.addNewHandle}\n                >\n                    <div style={{textAlign:\"center\"}}>Add new</div>\n                </Card>\n                </Col>\n                </Content>\n            </Layout>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.user.isLogin,\n    nickname: state.user.nickname,\n    email: state.user.email,\n    id: state.user.id\n})\n\nexport default connect(mapStateToProps)(withRouter(Account))"],"sourceRoot":""}